name: TMTY CI/CD
"on":
  push:
    branches:
      - trunk
jobs:
  build-api:
    name: Build api
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Authenticate to GCloud via Service Account
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.BUILD_AGENT_SA }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Configure GCloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Configure Docker
        run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev
      - name: Build api
        run: |-
          go run github.com/itura/fun/cmd/build@v0.1.23 build-artifact api \
            --config pkg/build/example/pipeline.yaml \
            --current-sha $GITHUB_SHA
  build-client:
    name: Build client
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Authenticate to GCloud via Service Account
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.BUILD_AGENT_SA }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Configure GCloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Configure Docker
        run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev
      - name: Build client
        run: |-
          go run github.com/itura/fun/cmd/build@v0.1.23 build-artifact client \
            --config pkg/build/example/pipeline.yaml \
            --current-sha $GITHUB_SHA
  deploy-app:
    name: Deploy app
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs:
      - build-client
      - build-api
      - deploy-infra
      - deploy-db
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Authenticate to GCloud via Service Account
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.BUILD_AGENT_SA }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - id: secrets-gcp-project
        name: Get Secrets from GCP Provider gcp-project
        uses: google-github-actions/get-secretmanager-secrets@v1
        with:
          secrets: |-
            client-id:gcp-project/client-id
            client-secret:gcp-project/client-secret
            next-auth-url:gcp-project/next-auth-url
            next-auth-secret:gcp-project/next-auth-secret
      - name: Authenticate to GKE Cluster
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: cluster-name
          location: uscentral1
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.2
      - name: Deploy app
        env:
          app-name: my-app
          client_secrets_clientId: ${{ steps.secrets-gcp-project.outputs.client-id }}
          client_secrets_clientSecret: ${{ steps.secrets-gcp-project.outputs.client-secret }}
          client_secrets_nextAuthSecret: ${{ steps.secrets-gcp-project.outputs.next-auth-secret }}
          client_secrets_nextAuthUrl: ${{ steps.secrets-gcp-project.outputs.next-auth-url }}
        run: |-
          go run github.com/itura/fun/cmd/build@v0.1.23 deploy-application app \
            --config pkg/build/example/pipeline.yaml \
            --current-sha $GITHUB_SHA
  deploy-db:
    name: Deploy db
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs:
      - deploy-infra
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Authenticate to GCloud via Service Account
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.BUILD_AGENT_SA }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Authenticate to GKE Cluster
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: cluster-name
          location: uscentral1
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.2
      - name: Deploy db
        env:
          postgresql_auth_password: ${{ secrets.pg-password }}
          postgresql_auth_postgresPassword: ${{ secrets.pg-admin-password }}
          postgresql_dbName: my-db
        run: |-
          go run github.com/itura/fun/cmd/build@v0.1.23 deploy-application db \
            --config pkg/build/example/pipeline.yaml \
            --current-sha $GITHUB_SHA
  deploy-infra:
    name: Deploy infra
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Authenticate to GCloud via Service Account
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.BUILD_AGENT_SA }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6
      - name: Deploy infra
        run: |-
          go run github.com/itura/fun/cmd/build@v0.1.23 deploy-application infra \
            --config pkg/build/example/pipeline.yaml \
            --current-sha $GITHUB_SHA
