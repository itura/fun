# Generated by github.com/itura/fun/cmd/build

name: My Build

on:
  push:
    branches:
      - trunk

jobs:
  # build-api:
  #   name: Build api
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 2
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.19"
  #     - uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  #         service_account: ${{ secrets.SERVICE_ACCOUNT }}
  #     - uses: google-github-actions/setup-gcloud@v0
  #     - run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

  #     - name: Build api
  #       env:
  #         PROJECT_ID: ${{ secrets.PROJECT_ID }}
  #       run: |-
  #         go run github.com/itura/fun/cmd/build@v0.1.19 build-artifact api \
  #           --config pkg/build/test_fixtures/pipeline_config_pass.yaml \
  #           --current-sha $GITHUB_SHA \
  #           --project-id $PROJECT_ID

  # deploy-db:
  #   name: Deploy db
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 2
  #     - uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  #         service_account: ${{ secrets.SERVICE_ACCOUNT }}
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.19"
  #     - uses: google-github-actions/get-gke-credentials@v1
  #       with:
  #         cluster_name: cluster-name
  #         location: uscentral1
  #     - uses: azure/setup-helm@v3
  #       with:
  #         version: v3.10.2
  #     - id: secrets-princess-pup
  #       uses: google-github-actions/get-secretmanager-secrets@v1
  #       with:
  #         secrets: |-
  #           pg-password:princess-pup/pg-password

  #     - name: Deploy db
  #       env:
  #         PROJECT_ID: ${{ secrets.PROJECT_ID }}
  #         postgresql_dbName: my-db
  #         postgresql_auth_password: ${{ steps.secrets-princess-pup.outputs.pg-password }}
  #         postgresql_auth_username: ${{ secrets.pg-username }}
  #       run: |-
  #         go run github.com/itura/fun/cmd/build@v0.1.19 deploy-application db \
  #           --config pkg/build/test_fixtures/pipeline_config_pass.yaml \
  #           --current-sha $GITHUB_SHA \
  #           --project-id $PROJECT_ID
